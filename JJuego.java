/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectofinal;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import static proyectofinal.JParser.Objetos;

/**
 *
 * @author jonat
 */
public class JJuego extends javax.swing.JFrame {

    ProyectoFinal datos = new ProyectoFinal();
    int fila = 0;
    int columna = 0;
    int vidacomplemento = 0;
    int danoenemigo = 0;
    int contadordecosas = 0; //variable para las filas de complementos
    int contadordecosas2 = 0; //variable para las filas de enemigos
    JLabel[][] Tablero;
    
    int personajex = 0; //para guardar la posicion en x del personaje
    int personajey = 0; //para guardar la posicion en x del personaje   
    int limitearriba =-1;
    int limiteizquierda = -1;
    String recibirpersonaje = "";
    int salidax = 0; // para guardar la posicion en x de la salida
    int saliday = 0; //para guardar la posicion en x de la salida
    int vidas = 0; //vida del personaje
    
    
    public JJuego() {
       fila = datos.datox; //datos de fila de la matriz
       columna = datos.datoy; //datos de columna de la matriz
       personajex = datos.n; //recibir nueva posicion en x y mover
       personajey = datos.m; //recibir nueva posicion en y y mover
       recibirpersonaje = datos.recibir;
       salidax=datos.a;
       saliday=datos.b;
       vidas = datos.vida;
       initComponents();
       Mostrar_Tablero(); 
        
        //PanelJuego.setBackground(new Color(0,0,0,230));
        PanelJuego.setOpaque(false);
        this.getContentPane().setBackground(Color.DARK_GRAY);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelJuego = new javax.swing.JPanel();
        BotonMover = new javax.swing.JButton();
        labelvida = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mario Bros");
        setBackground(new java.awt.Color(0, 0, 102));
        setMaximumSize(new java.awt.Dimension(1500, 700));
        setMinimumSize(new java.awt.Dimension(1172, 520));
        setPreferredSize(new java.awt.Dimension(1200, 580));
        getContentPane().setLayout(null);

        PanelJuego.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelJuego.setAutoscrolls(true);
        PanelJuego.setMinimumSize(new java.awt.Dimension(1152, 441));
        PanelJuego.setPreferredSize(new java.awt.Dimension(1200, 520));

        javax.swing.GroupLayout PanelJuegoLayout = new javax.swing.GroupLayout(PanelJuego);
        PanelJuego.setLayout(PanelJuegoLayout);
        PanelJuegoLayout.setHorizontalGroup(
            PanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1168, Short.MAX_VALUE)
        );
        PanelJuegoLayout.setVerticalGroup(
            PanelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 458, Short.MAX_VALUE)
        );

        getContentPane().add(PanelJuego);
        PanelJuego.setBounds(0, 10, 1170, 460);

        BotonMover.setText("Comenzar");
        BotonMover.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BotonMoverKeyPressed(evt);
            }
        });
        getContentPane().add(BotonMover);
        BotonMover.setBounds(1052, 486, 110, 23);

        labelvida.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        getContentPane().add(labelvida);
        labelvida.setBounds(60, 480, 94, 37);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 3, 12)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectofinal/corazon.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 480, 40, 37);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectofinal/fondo.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -20, 1170, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonMoverKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BotonMoverKeyPressed
        
         
        String tecla = (evt.getKeyText(evt.getKeyCode()));
        
         try{
            if(datos.GuardaTodo[personajex][personajey]!=datos.GuardaTodo[salidax][saliday]){ 
            if(tecla.equals("Arriba")){
            Arriba();            
            }else if(tecla.equals("Abajo")){
            Abajo();
            }else if(tecla.equals("Derecha")){
            Derecha();
            }else if(tecla.equals("Izquierda")){
            Izquierda();
            } 
            
            }else if(datos.GuardaTodo[personajex][personajey].equals(datos.GuardaTodo[salidax][saliday])){
                JOptionPane.showMessageDialog(null, "Felicidades has Ganado");
                System.exit(0);
            }
            
            
        if(vidas <= 0){
            JOptionPane.showMessageDialog(null, "Has Muerto :( ");
            System.exit(0);
        }

           Dano_Enemigos();
           Vida_Extra();
            
        }catch(Exception ios){
             //JOptionPane.showMessageDialog(null, ios);
        }
        
    }//GEN-LAST:event_BotonMoverKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JJuego().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonMover;
    private javax.swing.JPanel PanelJuego;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelvida;
    // End of variables declaration//GEN-END:variables

public void Mostrar_Tablero(){
    
    
    int x = 10;
    int y = 10;
    Tablero = new JLabel[fila][columna];
    
    for(int i = 0;i<fila;i++){
        for(int j=0;j<columna;j++){
            Tablero[i][j] = new JLabel();
            Tablero[i][j].setBackground(new Color(0,0,0,0));
            Tablero[i][j].setBounds(x,y,80,40);
            //Tablero[i][j].setBorder(new LineBorder(Color.black)); 
            Tablero[i][j].setIcon(new ImageIcon(datos.GuardaTodo[i][j]));
            PanelJuego.add(Tablero[i][j]);
            x+=85;
        }
        x=10;
        y+=42;
    }
    

    labelvida.setText(String.valueOf(vidas));
   
}

public void m(){
    for(int x=0;x<datos.GuardaTodo.length;x++){
            for(int y=0;y<datos.GuardaTodo[x].length;y++){
                System.out.print("[" + datos.GuardaTodo[x][y] + "]");
            }
            System.out.println("");
        }
}

public void Derecha(){
    if(personajey < columna /*&& datos.GuardaTodo[personajex][personajey+1] == null*/){
            personajey++;
            datos.GuardaTodo[personajex][personajey] = recibirpersonaje;
            datos.GuardaTodo[personajex][personajey-1] = "null";
                System.out.println(personajey);
                System.out.println("------------------------------");
            //preuba

          
             for(int i = 0;i<fila;i++){
            for(int j=0;j<columna;j++){           
            Tablero[i][j].setIcon(new ImageIcon(datos.GuardaTodo[i][j]));
        }
      
    }
            //
            }else{
               JOptionPane.showMessageDialog(null,"No se puede seguir avanzando hacia la derecha");
            }
}

public void Izquierda(){
    if(personajey > limiteizquierda){
            personajey--;
            datos.GuardaTodo[personajex][personajey] = recibirpersonaje;
            datos.GuardaTodo[personajex][personajey+1] = "null";
            
                System.out.println(personajey);
                System.out.println("------------------------------");
            //preuba        
             for(int i = 0;i<fila;i++){
            for(int j=0;j<columna;j++){           
            Tablero[i][j].setIcon(new ImageIcon(datos.GuardaTodo[i][j]));
        }
      
    }
            //
            }else{
               JOptionPane.showMessageDialog(null,"No se puede seguir avanzando hacia la izquierda");
            }
}

public void Abajo(){
     if(personajex < fila /*&& datos.GuardaTodo[personajex+1][personajey] == null*/){
            personajex++;
            datos.GuardaTodo[personajex][personajey] = recibirpersonaje;
            datos.GuardaTodo[personajex-1][personajey] = "null";
                System.out.println(personajex);
                System.out.println("------------------------------");
            //preuba

          
             for(int i = 0;i<fila;i++){
            for(int j=0;j<columna;j++){           
            Tablero[i][j].setIcon(new ImageIcon(datos.GuardaTodo[i][j]));
        }
      
    }
            //
            }else{
               JOptionPane.showMessageDialog(null,"No se puede seguir avanzando hacia Abajo");
            }
}

public void Arriba(){
 if(personajex > limitearriba ){
            personajex--;
            datos.GuardaTodo[personajex][personajey] = recibirpersonaje;           
            datos.GuardaTodo[personajex+1][personajey] = "null";
                System.out.println(personajex);
                System.out.println("------------------------------");
            //prueba
             for(int i = 0;i<fila;i++){
            for(int j=0;j<columna;j++){           
            Tablero[i][j].setIcon(new ImageIcon(datos.GuardaTodo[i][j]));
        }
      
    }
            //
            }else{
               JOptionPane.showMessageDialog(null,"No se puede seguir avanzando hacia Arriba");
            }   
}


public void Dano_Enemigos(){
    
    if(datos.GuardaTodo[personajex][personajey].equals(datos.GuardaTodo[Integer.parseInt(datos.Enemigos[contadordecosas2][0])][Integer.parseInt(datos.Enemigos[contadordecosas2][1])])){
                JOptionPane.showMessageDialog(null, "Te Golpearon");
                danoenemigo = Integer.parseInt(datos.Enemigos[contadordecosas2][2]);
                vidas = vidas - danoenemigo;
                labelvida.setText(String.valueOf(vidas));
                contadordecosas2++;
            }
}

public void Vida_Extra(){
  if(datos.GuardaTodo[personajex][personajey].equals(datos.GuardaTodo[Integer.parseInt(datos.Complementos[contadordecosas][0])][Integer.parseInt(datos.Complementos[contadordecosas][1])])){
                JOptionPane.showMessageDialog(null, "Vida Extra");
                vidacomplemento = Integer.parseInt(datos.Complementos[contadordecosas][2]);
                vidas = vidas + vidacomplemento;
                labelvida.setText(String.valueOf(vidas));
                contadordecosas++;
                
            }   
  
  
  
}

}
